version: '3.8'

services:
  # フロントエンド開発サーバー
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: guideforge-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8080/api
    depends_on:
      - backend
    command: npm run dev

  # バックエンドAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: guideforge-backend
    volumes:
      - ./backend:/app
    ports:
      - '8080:8080'
    environment:
      - GO_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=guideforge
      - JWT_SECRET=your_jwt_secret_key_change_in_production
    depends_on:
      - postgres
    command: go run cmd/api/main.go

  # PostgreSQLデータベース
  postgres:
    image: postgres:16-alpine
    container_name: guideforge-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=guideforge

  # pgAdmin4 (データベース管理用WebUI)
  pgadmin:
    image: dpage/pgadmin4
    container_name: guideforge-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '5050:80'
    depends_on:
      - postgres

volumes:
  postgres_data:
