---
description: プロジェクト全体に関わる一般的な開発規約
globs: ["**/*"]
alwaysApply: false
---

# GuideForge 一般開発規約

## プロジェクト概要

GuideForgeは業務効率化のためのマニュアル作成ツールです。このプロジェクトでは、フロントエンド（Next.js + TypeScript）とバックエンド（Go + Echo）の連携によって、ユーザーが簡単にマニュアルを作成、管理、共有できるプラットフォームを構築します。

## ディレクトリ構造

```
/
├── frontend/            # フロントエンドアプリケーション（Next.js + TypeScript）
├── backend/             # バックエンドアプリケーション（Go + Echo）
├── database/            # データベース関連ファイル
│   └── init/            # 初期化スクリプト
├── docker-compose.yml   # Dockerコンポーズ設定
└── README.md            # プロジェクト説明
```

## コミットメッセージ

コミットメッセージは以下の形式に従ってください：

```
feat: 新機能の追加
fix: バグ修正
docs: ドキュメントのみの変更
style: コードの意味に影響を与えない変更（空白、フォーマット、セミコロンの欠落など）
refactor: バグを修正したり機能を追加したりしないコード変更
perf: パフォーマンスを向上させるコード変更
test: 不足しているテストの追加または既存のテストの修正
chore: ビルドプロセスや補助ツールとライブラリの変更
```

## 命名規則

- ファイル名: 各言語の慣習に従う
- 変数名: 目的を明確に示す意味のある名前を使用
- 関数名: 動詞で始め、関数の目的を示す
- 定数名: 大文字と下線を使用（例: MAX_RETRY_COUNT）

## ドキュメント

- READMEには以下を含める：
  - プロジェクトの概要
  - セットアップ手順
  - 実行方法
  - 貢献方法
- コードドキュメントは各言語の標準的な形式に従う
- APIドキュメントはSwagger/OpenAPIで作成

## セキュリティ

- 環境変数を使用して機密情報を管理
- 入力値の検証を常に行う
- SQLインジェクションやXSSなどの脆弱性を防止
- 適切な認証・認可の仕組みを実装 