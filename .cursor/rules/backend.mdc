---
description: バックエンドの開発規約とスタイルガイド
globs: ["backend/**/*.go"]
---

# GuideForge バックエンド開発規約

## 基本方針

GuideForgeのバックエンド開発では、Go言語とEchoフレームワークを使用します。以下の規約に従ってコードを書いてください。

## コーディングスタイル

### Go
- インデント: 4スペース（タブは使用しない）
- 命名規則: snake_case
- エラー処理: 適切なエラーハンドリングを行う
- コメント: 関数やメソッドには適切なコメントを追加

### 構造

#### ハンドラー
- 場所: `backend/internal/api`
- 命名: snake_case
- 各APIエンドポイントに対応するハンドラー関数を定義

#### モデル
- 場所: `backend/internal/models`
- 命名: snake_case
- データベーステーブルに対応するGORMモデルを定義

#### リポジトリ
- 場所: `backend/internal/repository`
- 命名: snake_case
- データアクセス層の実装

#### サービス
- 場所: `backend/internal/services`
- 命名: snake_case
- ビジネスロジックの実装

## データベース設計

- テーブル名は複数形
- IDはプライマリキーとして使用
- created_atとupdated_atフィールドを含める
- 外部キーは適切に定義

## APIデザイン

- RESTful APIの原則に従う
- エンドポイントはリソースを表す名詞を使用
- 適切なHTTPメソッドを使用（GET、POST、PUT、DELETE）
- エラーレスポンスは統一されたフォーマットで返す

## テスト

- ユニットテストとインテグレーションテストを作成
- テストカバレッジを高く保つ
- テストはわかりやすく、メンテナンスしやすいものにする 